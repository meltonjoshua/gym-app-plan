# FitTracker Pro - Kubernetes Deployment Manifests
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fittracker-backend
  labels:
    app: fittracker-backend
    version: v1
    component: api-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fittracker-backend
  template:
    metadata:
      labels:
        app: fittracker-backend
        version: v1
        component: api-server
    spec:
      containers:
      - name: backend
        image: fittrackerpro/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: jwt-refresh-secret
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: stripe-secret-key
        - name: REVENUE_CAT_SECRET
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: revenue-cat-secret
        - name: SENTRY_DSN
          valueFrom:
            configMapKeyRef:
              name: fittracker-config
              key: sentry-dsn
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: fittracker-config
              key: api-base-url
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: fittracker-config
              key: cors-origin
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: fittracker-uploads-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: fittracker-logs-pvc
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fittracker-mongodb
  labels:
    app: fittracker-mongodb
    component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: fittracker-mongodb
  template:
    metadata:
      labels:
        app: fittracker-mongodb
        component: database
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: mongodb-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: mongodb-root-password
        - name: MONGO_INITDB_DATABASE
          value: "fittracker_prod"
        resources:
          limits:
            cpu: "2000m"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "2Gi"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /data/configdb
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: fittracker-mongodb-pvc
      - name: mongodb-config
        emptyDir: {}

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fittracker-redis
  labels:
    app: fittracker-redis
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fittracker-redis
  template:
    metadata:
      labels:
        app: fittracker-redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
        args:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        - --maxmemory
        - "512mb"
        - --maxmemory-policy
        - "allkeys-lru"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fittracker-secrets
              key: redis-password
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "512Mi"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: fittracker-redis-pvc

---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fittracker-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fittracker-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
